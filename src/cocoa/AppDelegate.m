/**
 * \file AppDelegate.m
 * \brief This is a minimal implementation of the OS X front end.
 *
 * Use this file to rebuild the .nib file with Xcode without having to pull
 * in all of the Sil source.  This is the procedure with Xcode 12:
 *
 * 1) Create a new Xcode project for a macOS App.
 * 2) You can set the "Product Name", "Team", "Organization Name",
 *    "Organization Identifier" as you wish.  Setting the product name to
 *    "sil" and the "Organization Identifier" to "net.amirrorclear" will
 *    match the bundle identifier used in the full builds for Sil.  Set
 *    "Language" to "Objective-C" and "User Interface" to "XIB".  Leave
 *    "Create Document-Based Application" and "Use Core Data" off.
 *    The setting for "Include Tests" doesn't matter; you can turn it
 *    off to avoid extra clutter.
 * 3) In Sil's project settings on the "Info" tab, set the deployment
 *    target to what's used in Sil's Makefile.cocoa.  When this was
 *    written, that was 10.6.  Turn off "Use Base Internationalization".
 *    One could leave it on (and use Base.lproj rather than en.lproj
 *    in the following instructions) but that imposes the requirement of
 *    at least 10.8 for the minimum version of OS X.  If you target 10.6,
 *    in the "Build Settings" tab, you'll need to set the setting for
 *    "Apple CLang - Language - Objective-C"->"Weak References in Manual
 *    Retain Release" to "No"; for 10.7 or later that won't be neccessary.
 * 4) In Sil's targets on the "General" tab, verify that "Main Interface"
 *    is MainMenu.
 * 5) Copy src/cocoa/AppDelegate.h and src/cocoa/AppDelegate.m from the
 *    Sil source files to the directory in the project with main.m.  Copy
 *    src/cocoa/en.lproj/MainMenu.xib to the en.lproj subdirectory
 *    of that directory.
 * 6) If you modify MainMenu.xib after copying it over, you may want to
 *    set it so that it can be opened in older versions of Xcode.  Select it in
 *    Xcode, and select one of the things, like "File's Owner" from it.  In
 *    the file information panel for it, there will be a section labeled
 *    "Document Editing" with an option menu for "Opens in".  Choosing one of
 *    the options other than "Latest Xcode" will close the file and save it
 *    with the appropriate flags.  Note that reopening the .xib file in Xcode
 *    and saving it will cause the version to revert to the latest Xcode.
 * 7) Use Xcode's Product->Build For->Running menu entry to build the project.
 * 8) The generated .nib file will be in
 *    Contents/Resources/en.lproj in the product directory which
 *    is something like
 *    ~/Library/Developer/Xcode/DerivedData/<product_name>-<some_string>/Build/Products/Debug/<product_name>.app
 *    You can use it to replace the .nib file in src/cocoa/en.lproj in the
 *    Sil source files (in older versions of Sil, MainMenu.nib is a
 *    directory; you'll have to remove it and replace it with the flat file
 *    that is generated by the above procedure and adjust the installation
 *    rules for it in Makefile.cocoa).
 *
 * This work is free software; you can redistribute it and/or modify it
 * under the terms of either:
 *
 * a) the GNU General Public License as published by the Free Software
 *    Foundation, version 2, or
 *
 * b) the "Angband licence":
 *    This software may be copied and distributed for educational, research,
 *    and not for profit purposes provided that this copyright and statement
 *    are included in all such copies.  Other copyrights may also apply.
 */

#import "AppDelegate.h"

@implementation AngbandAppDelegate

@synthesize commandMenu=_commandMenu;
@synthesize commandMenuTagMap=_comandMenuTagMap;

- (void)applicationDidFinishLaunching:(NSNotification *)aNotification {
    // Insert code here to initialize your application
}


- (void)applicationWillTerminate:(NSNotification *)aNotification {
    // Insert code here to tear down your application
}


- (IBAction)newGame:(id)sender {
}

- (IBAction)editFont:(id)sender {
}

- (IBAction)openGame:(id)sender {
}

- (IBAction)saveGame:(id)sender {
}

- (IBAction)setRefreshRate:(NSMenuItem *)sender {
}

- (void)setGraphicsMode:(NSMenuItem *)sender {
}

- (void)selectWindow:(id)sender {
}

@end
